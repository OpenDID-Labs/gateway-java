<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.opendid.web2gateway.repository.mapper.OdOracleContractEventlogMapper">

  <select id="selectPendingData"
    parameterType="io.opendid.web2gateway.model.dto.oracle.EventLogPendingInputDTO"
    resultType="io.opendid.web2gateway.model.dto.oracle.EventLogPendingOutputDTO">
    SELECT
      ocel.log_id AS logId,
      ocel.job_id AS jobId,
      ocel.request_id AS requestId,
      ocel.vn_code AS vnCode,
      ocel.next_execute_time AS nextExecuteTime,
      ocel.execute_count AS executeCount
    FROM
        od_oracle_contract_eventlog AS ocel
    WHERE
        ocel.process_status = #{processStatus}
    AND ocel.next_execute_time &lt;= #{nextExecuteTime}
    AND ocel.execute_count &lt; #{executeCount}
    ORDER BY
        logId ASC;
  </select>


  <update id="updateByRequestId" parameterType="io.opendid.web2gateway.repository.model.OdOracleContractEventlog">
    update od_oracle_contract_eventlog
    <set>
      <if test="vnCode != null">
        vn_code = #{vnCode,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="jobIdFee != null">
        job_id_fee = #{jobIdFee,jdbcType=BIGINT},
      </if>
      <if test="platformCode != null">
        platform_code = #{platformCode,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        process_status = #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="callbackOracleHash != null">
        callback_oracle_hash = #{callbackOracleHash,jdbcType=VARCHAR},
      </if>
      <if test="traceId != null">
        trace_id = #{traceId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="nextExecuteTime != null">
        next_execute_time = #{nextExecuteTime,jdbcType=BIGINT},
      </if>
      <if test="executeCount != null">
        execute_count = #{executeCount,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where request_id = #{requestId,jdbcType=VARCHAR}
  </update>

</mapper>