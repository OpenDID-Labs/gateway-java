<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.opendid.web2gateway.repository.mapper.OdOracleContractEventlogMapper">

  <select id="selectPendingData"
    parameterType="io.opendid.web2gateway.model.dto.oracle.EventLogPendingInputDTO"
    resultType="io.opendid.web2gateway.model.dto.oracle.EventLogPendingOutputDTO">
    SELECT
      ocel.log_id AS logId,
      ocel.job_id AS jobId,
      ocel.request_id AS requestId,
      ocel.vn_code AS vnCode,
      ocel.next_execute_time AS nextExecuteTime,
      ocel.execute_count AS executeCount,
      ocel.request_aptos_version AS requestAptosVersion
    FROM
        od_oracle_contract_eventlog AS ocel
    WHERE
        ocel.process_status = #{processStatus}
    AND ocel.next_execute_time &lt;= #{nextExecuteTime}
    ORDER BY
      log_id ASC;
  </select>


  <update id="updateByRequestId" parameterType="io.opendid.web2gateway.repository.model.OdOracleContractEventlogWithBLOBs">
    update od_oracle_contract_eventlog
    <set>
      <if test="vnCode != null">
        vn_code = #{vnCode,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="jobIdFee != null">
        job_id_fee = #{jobIdFee,jdbcType=BIGINT},
      </if>
      <if test="platformCode != null">
        platform_code = #{platformCode,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        process_status = #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="callbackOracleHash != null">
        callback_oracle_hash = #{callbackOracleHash,jdbcType=VARCHAR},
      </if>
      <if test="traceId != null">
        trace_id = #{traceId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="nextExecuteTime != null">
        next_execute_time = #{nextExecuteTime,jdbcType=BIGINT},
      </if>
      <if test="executeCount != null">
        execute_count = #{executeCount,jdbcType=INTEGER},
      </if>
      <if test="cancelStatus != null">
        cancel_status = #{cancelStatus,jdbcType=INTEGER},
      </if>
      <if test="cancelOracleHash != null">
        cancel_oracle_hash = #{cancelOracleHash,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="cancelErrorMsg != null">
        cancel_error_msg = #{cancelErrorMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="requestBody != null">
        request_body = #{requestBody,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseBody != null">
        response_body = #{responseBody,jdbcType=LONGVARCHAR},
      </if>
      <if test="cancelRequestBody != null">
        cancel_request_body = #{cancelRequestBody,jdbcType=LONGVARCHAR},
      </if>
      <if test="cancelResponseBody != null">
        cancel_response_body = #{cancelResponseBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where request_id = #{requestId,jdbcType=VARCHAR}
  </update>

  <select id="selectByRequestId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from od_oracle_contract_eventlog
    where request_id = #{requestId,jdbcType=VARCHAR}
    ORDER BY log_id DESC
    LIMIT 1;
  </select>

  <select id="selectCancelStatusByRequestId" parameterType="java.lang.String" resultType="io.opendid.web2gateway.model.dto.oracle.GetCancelTransactionRespDTO">
    select
        job_id jobId,
        request_id requestId,
        cancel_status status,
        cancel_oracle_hash cancelOracleHash,
        cancel_create_date cancelDate,
        cancel_error_msg errorMessage
    from od_oracle_contract_eventlog
    where request_id = #{requestId,jdbcType=VARCHAR}
    ORDER BY
      log_id DESC;
  </select>

  <select id="selectCancelPendingData" parameterType="io.opendid.web2gateway.model.dto.oracle.CancelEventLogPendingInDTO"
          resultType="io.opendid.web2gateway.model.dto.oracle.CancelEventLogPendingOutDTO">
    SELECT
      ocel.log_id AS logId,
      ocel.request_id AS requestId,
      ocel.job_id AS jobId,
      ocel.cancel_execute_count AS cancelExecuteCount
    FROM
      od_oracle_contract_eventlog AS ocel
    WHERE
      ocel.cancel_status = #{cancelStatus}
      AND ocel.cancel_next_execute_time &lt;= #{cancelNextExecuteTime}
    ORDER BY
      log_id ASC;
  </select>

  <update id="updateByRequestIdAndHash" parameterType="io.opendid.web2gateway.repository.model.OdOracleContractEventlogWithBLOBs">
    update od_oracle_contract_eventlog
    <set>
      <if test="vnCode != null">
        vn_code = #{vnCode,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="jobIdFee != null">
        job_id_fee = #{jobIdFee,jdbcType=BIGINT},
      </if>
      <if test="platformCode != null">
        platform_code = #{platformCode,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        process_status = #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="callbackOracleHash != null">
        callback_oracle_hash = #{callbackOracleHash,jdbcType=VARCHAR},
      </if>
      <if test="traceId != null">
        trace_id = #{traceId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="nextExecuteTime != null">
        next_execute_time = #{nextExecuteTime,jdbcType=BIGINT},
      </if>
      <if test="executeCount != null">
        execute_count = #{executeCount,jdbcType=INTEGER},
      </if>
      <if test="cancelStatus != null">
        cancel_status = #{cancelStatus,jdbcType=INTEGER},
      </if>
      <if test="cancelOracleHash != null">
        cancel_oracle_hash = #{cancelOracleHash,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="cancelErrorMsg != null">
        cancel_error_msg = #{cancelErrorMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="requestBody != null">
        request_body = #{requestBody,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseBody != null">
        response_body = #{responseBody,jdbcType=LONGVARCHAR},
      </if>
      <if test="cancelRequestBody != null">
        cancel_request_body = #{cancelRequestBody,jdbcType=LONGVARCHAR},
      </if>
      <if test="cancelResponseBody != null">
        cancel_response_body = #{cancelResponseBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where request_id = #{requestId,jdbcType=VARCHAR}
    <if test="requestAptosVersion != null">
      and request_aptos_version = #{requestAptosVersion,jdbcType=VARCHAR}
    </if>
    <if test="cancelOracleHash != null">
      and cancel_oracle_hash = #{cancelOracleHash,jdbcType=VARCHAR}
    </if>
  </update>

</mapper>